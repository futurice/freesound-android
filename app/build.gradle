/*
 * Copyright 2016 Futurice GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'checkstyle'

apply from: 'app-config.gradle'
apply from: 'proguard-config.gradle'

def STRING = "String"

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "com.futurice.freesound"
        minSdkVersion 22
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"

        signingConfig signingConfigs.debug

        vectorDrawables.useSupportLibrary = true

        buildConfigField(STRING, "FREESOUND_API_URL", freesound_api_url)
        buildConfigField(STRING, "FREESOUND_API_KEY", freesound_api_key)
    }
    signingConfigs {
        debug {
            storeFile file("keystore/debug.keystore")
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
        }
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), releaseProguardFiles
            minifyEnabled true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        lintConfig file('./quality/lint.xml')
    }

}

task checkstyle(type: Checkstyle) {
    group 'verification'
    description 'Checks if the code adheres to the coding standards'
    configFile file('quality/checkstyle.xml')
    source 'src/main/java'
    include '**/*.java'
    exclude '**/gen/**'
    classpath = files() // empty because unnecessary for checkstyle
}

ext {
    // Shared dependency versions
    androidSupportLibraryVersion = '23.3.0'
    javaPoetVersion = '1.7.0'
    dagger2Version = '2.4'
    javaxAnnotationVersion = '10.0-b28'
    rxJava2Version = '2.0.0-RC2'
    rxAndroidVersion = '2.0.0-RC1'
    okHttpVersion = '3.4.1'
    picassoVersion = '2.5.2'
    retrofit2Version = '2.1.0'
    retrofit2RxJava2AdapterVersion = '1.0.0-RC2'
    retrofit2GsonConverterVersion = '2.0.0'
    gsonVersion = '2.7'
    autoValueVersion = '1.2'
    autoValueGsonVersion = '0.3.2-rc1'
    autoValueParcelableVersion = '0.2.3-rc2'
    optionsVersion = '1.2.0'
    firebaseVersion = '9.4.0'
    stethoVersion = '1.3.1'
    timberVersion = '4.2.0'

    junitVersion = '4.12'
    mockitoVersion = '2.0.101-beta'
    assertJVersion = '1.7.1'
}

dependencies {

    // Android Support
    compile "com.android.support:support-v4:$androidSupportLibraryVersion"
    compile "com.android.support:support-annotations:$androidSupportLibraryVersion"
    compile "com.android.support:appcompat-v7:$androidSupportLibraryVersion"
    compile "com.android.support:palette-v7:$androidSupportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$androidSupportLibraryVersion"
    compile "com.android.support:cardview-v7:$androidSupportLibraryVersion"
    compile "com.android.support:design:$androidSupportLibraryVersion"

    // Dagger 2
    apt "com.squareup:javapoet:$javaPoetVersion"
    compile "com.google.dagger:dagger:$dagger2Version"
    apt "com.google.dagger:dagger-compiler:$dagger2Version"
    provided "org.glassfish:javax.annotation:$javaxAnnotationVersion"

    // RxJava
    compile "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    compile "io.reactivex.rxjava2:rxjava:$rxJava2Version"

    // Networking
    compile "com.squareup.okhttp3:okhttp:$okHttpVersion"
    compile "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
    compile "com.squareup.picasso:picasso:$picassoVersion"

    // Networking Retrofit
    compile "com.squareup.retrofit2:retrofit:$retrofit2Version"
    compile "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$retrofit2RxJava2AdapterVersion"
    compile "com.squareup.retrofit2:converter-gson:$retrofit2GsonConverterVersion"

    // GSON
    compile "com.google.code.gson:gson:$gsonVersion"

    // Auto-Value
    provided "com.google.auto.value:auto-value:$autoValueVersion"
    apt "com.google.auto.value:auto-value:$autoValueVersion"

    // Auto-Value GSON
    apt "com.ryanharter.auto.value:auto-value-gson:$autoValueGsonVersion"

    // Auto-Value Parcelable
    compile "com.ryanharter.auto.value:auto-value-parcel-adapter:$autoValueParcelableVersion"
    apt "com.ryanharter.auto.value:auto-value-parcel:$autoValueParcelableVersion"

    // Optionals for Java 6/7
    compile "com.github.tomaszpolanski:options:$optionsVersion"

    // Timber
    compile "com.jakewharton.timber:timber:$timberVersion"

    // Instrumentation
    compile "com.facebook.stetho:stetho:$stethoVersion"
    compile "com.facebook.stetho:stetho-okhttp3:$stethoVersion"

    // Firebase
    compile "com.google.firebase:firebase-core:$firebaseVersion"
    compile "com.google.firebase:firebase-crash:$firebaseVersion"

    // Unit Testing
    testCompile "junit:junit:$junitVersion"
    testCompile "org.mockito:mockito-core:$mockitoVersion"
    testCompile "org.assertj:assertj-core:$assertJVersion"

    //TODO: Temporally removing assert lib until it supports Rx2
  //  testCompile 'com.github.peter-tackage:assert-rx:0.9.7'
}

apply plugin: 'com.google.gms.google-services'
